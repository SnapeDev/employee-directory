@model EmployeeDirectory.Models.Employee

@{
    ViewData["Title"] = "Add Employee";
}

<h1>Add New Employee</h1>
<form onsubmit="return submitForm(event)" id="employeeForm">
    <div class="form-group mb-3">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" required>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    
    <div class="form-group mb-3">
        <label asp-for="Position"></label>
        <input asp-for="Position" class="form-control" required>
        <span asp-validation-for="Position" class="text-danger"></span>
    </div>
    
    <div class="form-group mb-3">
        <label asp-for="Department"></label>
        <input asp-for="Department" class="form-control" required>
        <span asp-validation-for="Department" class="text-danger"></span>
    </div>
    
    <button type="submit" class="btn btn-primary">Add Employee</button>
    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
    // This script handles the form submission and validation
async function submitForm(event) {
    event.preventDefault();
    
    // Clear previous alerts
    $('#alert-container').empty();
    
    // Client-side validation
    const form = document.getElementById('employeeForm');
    if (!form.checkValidity()) {
        form.classList.add('was-validated');
        return false;
    }

    // Prepare data
    const formData = {
        Name: $('#Name').val().trim(),
        Position: $('#Position').val().trim(),
        Department: $('#Department').val().trim()
    };
// Validate data
    try {
        const response = await fetch('@Url.Action("Add", "Employee")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify(formData)
        });
// Handle response
        const result = await response.json();
        
        if (result.success) {
            window.location.href = '@Url.Action("Index", "Home")?successMessage=' + 
                encodeURIComponent(result.message);
        } else {
            showAlert('danger', result.errors.join('<br>'));
        }
    } catch (error) {
        showAlert('danger', 'An error occurred. Please try again.');
        console.error('Error:', error);
    }
}
// Function to show alerts
        function showAlert(type, message) {
            const alert = `
                <div class="alert alert-${type} alert-dismissible fade show mt-3" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>`;
            $('#alert-container').html(alert);
        }
    </script>
}
